    /*
    this.panResponder = PanResponder.create({
      onStartShouldSetPanResponder: (e, gesture) => true,
      onPanResponderGrant: (e, gesture) => {
        this.state.pan.setOffset({
          x: this._val.x,
          y: this._val.y,
        });
        this.state.pan.setValue({x: 0, y: 0});
      },
      onPanResponderMove: Animated.event(
        [null, {dx: this.state.pan.x, dy: this.state.pan.y}],
        {useNativeDriver: false},
      ),
      onPanResponderRelease: (e, gesture) => {
        if (this.isDropArea(gesture)) {
          if (this.props.dropBehavior) {
            // Determine the relative position of the dropped DraggableImage vs.
            // the page origin (which happens to be the drop-image's origin, too).
            let adjustedCoords = {
              x:
                (this._val.x + this._startLocation.x) /
                this.props.displaySizeProportion,
              y:
                (this._val.y + this._startLocation.y) /
                this.props.displaySizeProportion,
            };
            console.log(`Dropped at: ${adjustedCoords.x}, ${adjustedCoords.y}`);
            this.props.dropBehavior(this.props.imageName, adjustedCoords);
          }
          Animated.timing(this.state.opacity, {
            toValue: OPACITY_AFTER_DROP,
            duration: 1000,
            useNativeDriver: true,
          }).start(() => {
            this.setState({
              showDraggableImage: OPACITY_AFTER_DROP > 0,
            });
          });
        }
      },
    });
    */




  //isDropArea(gesture: PanResponderGestureState) {
  //  return gesture.moveY < DROP_AREA_HEIGHT; // JESSEFIX
  ////}



      /*
    this._val = {x: 0, y: 0};

    let pan = new Animated.ValueXY();
    pan.addListener((value: xyCoordinates) => {
      this._val = value;
    });
    */


  //pan: any;
  //opacity: any;


  const DROP_AREA_HEIGHT = 250;




const OPACITY_AFTER_DROP = 0.2;



      //dropAreaValues: null,
      //pan: pan,
      //opacity: new Animated.Value(1),




        //private _val: xyCoordinates;